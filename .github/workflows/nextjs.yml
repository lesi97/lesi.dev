name: Deploy Next.js site to VPC

on:
    push:
        branches: ['nextjs']

    workflow_dispatch:

permissions:
    contents: read

concurrency:
    group: 'vpc-deploy'
    cancel-in-progress: false

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Detect package manager
              id: detect-package-manager
              run: |
                  if [ -f "${{ github.workspace }}/yarn.lock" ]; then
                    echo "manager=yarn" >> $GITHUB_OUTPUT
                    echo "command=install" >> $GITHUB_OUTPUT
                    echo "runner=yarn" >> $GITHUB_OUTPUT
                    exit 0
                  elif [ -f "${{ github.workspace }}/package.json" ]; then
                    echo "manager=npm" >> $GITHUB_OUTPUT
                    echo "command=ci" >> $GITHUB_OUTPUT
                    echo "runner=npx --no-install" >> $GITHUB_OUTPUT
                    exit 0
                  else
                    echo "Unable to determine package manager"
                    exit 1
                  fi
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: ${{ steps.detect-package-manager.outputs.manager }}
            - name: Restore cache
              uses: actions/cache@v4
              with:
                  path: |
                      .next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
            - name: Install dependencies
              run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
            - name: Build with Next.js
              run: ${{ steps.detect-package-manager.outputs.runner }} next build
            - name: Package Build Artifacts
              run: tar -czf nextjs-build.tar.gz .next
            - name: Upload Build Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: nextjs-build
                  path: nextjs-build.tar.gz

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Download Build Artifact
              uses: actions/download-artifact@v3
              with:
                  name: nextjs-build
            - name: Extract Build Artifact
              run: tar -xzf nextjs-build.tar.gz
            - name: Deploy to VPC via SCP
              run: |
                  sshpass -p "${{ secrets.VPC_PASSWORD }}" scp -o StrictHostKeyChecking=no -r .next ${{ secrets.VPC_USER }}@${{ secrets.VPC_HOST }}:/srv/lesi.dev/www/
            - name: Restart Application on VPC
              run: |
                  sshpass -p "${{ secrets.VPC_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.VPC_USER }}@${{ secrets.VPC_HOST }} << EOF
                  cd /srv/lesi.dev/www/
                  pm2 restart "lesi.dev" || pm2 start npm --name "lesi.dev" -- start
                  EOF
